services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong!Passw0rd"
      MSSQL_PID: "Developer"
    ports:
      - "1434:1433"
    volumes:
      - mssql_data:/var/opt/mssql

  flightclientapp:
    container_name: ui
    image: ${DOCKER_REGISTRY-}flightclientapp
    build:
      context: FlightClientApp
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      ASPNETCORE_URLS: "http://+:8080"
      Api__BaseUrl: "http://api:8080"
    depends_on:
      - flightstorageservice
    ports:
      - "8082:8080"

  flightstorageservice:
    container_name: api
    image: ${DOCKER_REGISTRY-}flightstorageservice
    build:
      context: FlightStorageService
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
      ASPNETCORE_URLS: "http://+:8080"
      Kafka__BootstrapServers: "kafka:29092"
    depends_on:
      - sqlserver
      - kafka
    ports:
      - "8081:8080"

  cleanupworker:
    container_name: worker
    image: ${DOCKER_REGISTRY-}cleanupworker
    build:
      context: .
      dockerfile: CleanupWorker/Dockerfile
    environment:
      Kafka__BootstrapServers: "kafka:29092"
    depends_on:
      - kafka


  kafka:
    image: bitnami/kafka:4.0.0          
    container_name: kafka
    hostname: kafka                    
    ports:
      - "9092:9092"  
      - "29092:29092" 
      - "9093:9093"   
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,INTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL   
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes

  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"                           
    environment:
      - KAFKA_BROKERS=kafka:29092             
    depends_on:
      - kafka

volumes:
  mssql_data:
  kafka_data:
